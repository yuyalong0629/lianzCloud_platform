{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/SpriceInfoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/SpriceInfoForm.vue","mtime":1560860489610},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { setTimeout, clearTimeout } from 'timers'\nexport default {\n  name: 'SpriceInfo',\n  data() {\n    return {\n      timer: null,\n      columns: [\n        {\n          title: '',\n          dataIndex: 'name',\n          align: 'center'\n        }\n      ],\n      dataSource: [],\n      dataObj: {},\n      spriceData: []\n    }\n  },\n  props: {\n    infoData: {\n      type: Object,\n      default: {}\n    },\n    spriceInfoData: {\n      type: Array,\n      default: []\n    },\n    craftsInfoData: {\n      type: Array,\n      default: []\n    },\n    materialsGroupInfoData: {\n      type: Array,\n      default: []\n    },\n    spriceInfoBasic: {\n      type: String,\n      default: ''\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer)\n  },\n  methods: {\n    handleChange(value, key, column) {\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        const newData = [...this.dataSource]\n        const target = newData.filter(item => key === item.key)[0]\n        if (target) {\n          target[column] = value\n          this.dataSource = newData\n          // console.log(this.dataSource)\n          // console.log(this.columns.slice(1, this.columns.length))\n          this.spriceData = []\n          this.dataSource.forEach(item => {\n            this.columns.slice(1, this.columns.length).forEach(cItem => {\n              // console.log(cItem)\n              this.spriceData.push({\n                bomIndex: cItem.id - 1,\n                craftIndex: item.key - 1,\n                price: item[`plan${cItem.id}`]\n              })\n            })\n          })\n          // console.log(this.spriceData)\n          this.$emit('spriceData', this.spriceData)\n        }\n      } else {\n        this.$message.error('请输入数字')\n      }\n    },\n    handleChangeBasic(value) {\n      // console.log(value)\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        this.$emit('basicSprice', value)\n      } else {\n        this.$message.error('请输入数字')\n      }\n    }\n  },\n  watch: {\n    infoData: {\n      handler(val) {\n        if (val.craftInfoData.length || val.bomInfoData.length) {\n          console.log(val)\n          // 初始化\n          this.dataSource = []\n          this.columns = [\n            {\n              title: '',\n              dataIndex: 'name',\n              align: 'center'\n            }\n          ]\n          // 遍历columns\n          val.bomInfoData.forEach(item => {\n            this.columns.push({\n              title: item.inputVal,\n              dataIndex: `plan${item.id}`,\n              id: item.id,\n              align: 'center',\n              scopedSlots: { customRender: `plan${item.id}` }\n            })\n          })\n          // console.log(this.columns)\n          // 遍历dataIndex\n          this.columns.slice(1, this.columns.length).forEach((item, index) => {\n            this.dataObj[item.dataIndex] = ''\n            this.dataObj['id'] = item.id\n          })\n          // console.log(this.dataObj)\n          // 遍历data\n          val.craftInfoData.forEach(item => {\n            this.dataSource.push({\n              key: item.id,\n              name: item.inputVal,\n              ...this.dataObj\n            })\n          })\n          // console.log(this.dataSource)\n          this.spriceData = []\n          this.dataSource.forEach(item => {\n            this.columns.slice(1, this.columns.length).forEach(cItem => {\n              // console.log(cItem)\n              this.spriceData.push({\n                bomIndex: cItem.id - 1,\n                craftIndex: item.key - 1,\n                price: item[`plan${cItem.id}`]\n              })\n            })\n          })\n          // console.log(this.spriceData)\n          this.$emit('spriceData', this.spriceData)\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    // column\n    craftsInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.$nextTick(() => {\n            this.dataSource = []\n            val.forEach((item, index) => {\n              this.$nextTick(() => {\n                this.dataSource.push({\n                  key: item.id,\n                  name: item.productCraftName,\n                  ...this.dataObj\n                })\n              })\n            })\n            // console.log(this.dataObj)\n            console.log(this.dataSource)\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    // datasource\n    materialsGroupInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.$nextTick(() => {\n            this.columns = [\n              {\n                title: '',\n                dataIndex: 'name',\n                align: 'center'\n              }\n            ]\n            val.forEach(item => {\n              this.columns.push({\n                title: item.groupName,\n                dataIndex: `plan${item.id}`,\n                id: item.id,\n                align: 'center',\n                scopedSlots: { customRender: `plan${item.id}` }\n              })\n            })\n            this.columns\n              .slice(1, this.columns.length)\n              .forEach((item, index) => {\n                this.dataObj[item.dataIndex] = ''\n                this.dataObj['id'] = item.id\n              })\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.timer = setTimeout(() => {\n            // console.log(this.dataSource)\n            // console.log(this.columns)\n            const dataSourceIndex = []\n            this.dataSource.forEach((item, index) => {\n              // console.log(item)\n              const trData = val.filter(cItem => {\n                return cItem.craftGroupId === item.key\n              })\n              dataSourceIndex[index] = [...trData]\n              dataSourceIndex[index].forEach((cItem, cIndex) => {\n                // console.log(cItem)\n                this.columns.forEach(ccItem => {\n                  if (cItem.bomGroupId !== ccItem.id) {\n                    // this.dataSource[index][`plan${ccItem.id}`] = '0'\n                  }\n                  if (cItem.bomGroupId === ccItem.id) {\n                    this.dataSource[index][`plan${ccItem.id}`] = cItem.price\n                  }\n                })\n                // console.log(indexColumn)\n              })\n            })\n            // console.log(dataSourceIndex)\n          }, 100)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n",{"version":3,"sources":["SpriceInfoForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpriceInfoForm.vue","sourceRoot":"src/views/product/pdm/goods/child_info/tab_goodsInfo","sourcesContent":["<template>\n  <div class=\"sprice-info\">\n    <a-row :gutter=\"24\">\n      <a-col :span=\"18\">\n        <a-table bordered :dataSource=\"dataSource\" :columns=\"columns\" :pagination=\"false\">\n          <template v-for=\"(value, col) in dataObj\" :slot=\"col\" slot-scope=\"text, record, index\">\n            <div :key=\"col\">\n              <a-input\n                style=\"margin: -5px 5px; width: 80%;\"\n                :value=\"text\"\n                @change=\"e => handleChange(e.target.value, record.key, col)\"\n              />\n            </div>\n          </template>\n        </a-table>\n      </a-col>\n      <a-col :span=\"6\">\n        <a-form-item label=\"基础报价\">\n          <a-input :value=\"spriceInfoBasic\" @change=\"e => handleChangeBasic(e.target.value)\" placeholder=\"基础报价\"/>\n        </a-form-item>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n<script>\nimport { setTimeout, clearTimeout } from 'timers'\nexport default {\n  name: 'SpriceInfo',\n  data() {\n    return {\n      timer: null,\n      columns: [\n        {\n          title: '',\n          dataIndex: 'name',\n          align: 'center'\n        }\n      ],\n      dataSource: [],\n      dataObj: {},\n      spriceData: []\n    }\n  },\n  props: {\n    infoData: {\n      type: Object,\n      default: {}\n    },\n    spriceInfoData: {\n      type: Array,\n      default: []\n    },\n    craftsInfoData: {\n      type: Array,\n      default: []\n    },\n    materialsGroupInfoData: {\n      type: Array,\n      default: []\n    },\n    spriceInfoBasic: {\n      type: String,\n      default: ''\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer)\n  },\n  methods: {\n    handleChange(value, key, column) {\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        const newData = [...this.dataSource]\n        const target = newData.filter(item => key === item.key)[0]\n        if (target) {\n          target[column] = value\n          this.dataSource = newData\n          // console.log(this.dataSource)\n          // console.log(this.columns.slice(1, this.columns.length))\n          this.spriceData = []\n          this.dataSource.forEach(item => {\n            this.columns.slice(1, this.columns.length).forEach(cItem => {\n              // console.log(cItem)\n              this.spriceData.push({\n                bomIndex: cItem.id - 1,\n                craftIndex: item.key - 1,\n                price: item[`plan${cItem.id}`]\n              })\n            })\n          })\n          // console.log(this.spriceData)\n          this.$emit('spriceData', this.spriceData)\n        }\n      } else {\n        this.$message.error('请输入数字')\n      }\n    },\n    handleChangeBasic(value) {\n      // console.log(value)\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        this.$emit('basicSprice', value)\n      } else {\n        this.$message.error('请输入数字')\n      }\n    }\n  },\n  watch: {\n    infoData: {\n      handler(val) {\n        if (val.craftInfoData.length || val.bomInfoData.length) {\n          console.log(val)\n          // 初始化\n          this.dataSource = []\n          this.columns = [\n            {\n              title: '',\n              dataIndex: 'name',\n              align: 'center'\n            }\n          ]\n          // 遍历columns\n          val.bomInfoData.forEach(item => {\n            this.columns.push({\n              title: item.inputVal,\n              dataIndex: `plan${item.id}`,\n              id: item.id,\n              align: 'center',\n              scopedSlots: { customRender: `plan${item.id}` }\n            })\n          })\n          // console.log(this.columns)\n          // 遍历dataIndex\n          this.columns.slice(1, this.columns.length).forEach((item, index) => {\n            this.dataObj[item.dataIndex] = ''\n            this.dataObj['id'] = item.id\n          })\n          // console.log(this.dataObj)\n          // 遍历data\n          val.craftInfoData.forEach(item => {\n            this.dataSource.push({\n              key: item.id,\n              name: item.inputVal,\n              ...this.dataObj\n            })\n          })\n          // console.log(this.dataSource)\n          this.spriceData = []\n          this.dataSource.forEach(item => {\n            this.columns.slice(1, this.columns.length).forEach(cItem => {\n              // console.log(cItem)\n              this.spriceData.push({\n                bomIndex: cItem.id - 1,\n                craftIndex: item.key - 1,\n                price: item[`plan${cItem.id}`]\n              })\n            })\n          })\n          // console.log(this.spriceData)\n          this.$emit('spriceData', this.spriceData)\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    // column\n    craftsInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.$nextTick(() => {\n            this.dataSource = []\n            val.forEach((item, index) => {\n              this.$nextTick(() => {\n                this.dataSource.push({\n                  key: item.id,\n                  name: item.productCraftName,\n                  ...this.dataObj\n                })\n              })\n            })\n            // console.log(this.dataObj)\n            console.log(this.dataSource)\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    // datasource\n    materialsGroupInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.$nextTick(() => {\n            this.columns = [\n              {\n                title: '',\n                dataIndex: 'name',\n                align: 'center'\n              }\n            ]\n            val.forEach(item => {\n              this.columns.push({\n                title: item.groupName,\n                dataIndex: `plan${item.id}`,\n                id: item.id,\n                align: 'center',\n                scopedSlots: { customRender: `plan${item.id}` }\n              })\n            })\n            this.columns\n              .slice(1, this.columns.length)\n              .forEach((item, index) => {\n                this.dataObj[item.dataIndex] = ''\n                this.dataObj['id'] = item.id\n              })\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoData: {\n      handler(val) {\n        if (val.length) {\n          this.timer = setTimeout(() => {\n            // console.log(this.dataSource)\n            // console.log(this.columns)\n            const dataSourceIndex = []\n            this.dataSource.forEach((item, index) => {\n              // console.log(item)\n              const trData = val.filter(cItem => {\n                return cItem.craftGroupId === item.key\n              })\n              dataSourceIndex[index] = [...trData]\n              dataSourceIndex[index].forEach((cItem, cIndex) => {\n                // console.log(cItem)\n                this.columns.forEach(ccItem => {\n                  if (cItem.bomGroupId !== ccItem.id) {\n                    // this.dataSource[index][`plan${ccItem.id}`] = '0'\n                  }\n                  if (cItem.bomGroupId === ccItem.id) {\n                    this.dataSource[index][`plan${ccItem.id}`] = cItem.price\n                  }\n                })\n                // console.log(indexColumn)\n              })\n            })\n            // console.log(dataSourceIndex)\n          }, 100)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.sprice-info {\n  margin-bottom: 30px;\n}\n</style>\n"]}]}