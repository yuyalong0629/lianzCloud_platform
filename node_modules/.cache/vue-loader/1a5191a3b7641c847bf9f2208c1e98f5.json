{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/product/pdm/catattr/child_info/CatattrInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/product/pdm/catattr/child_info/CatattrInfo.vue","mtime":1558529370157},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PromptTitle from '@/components/tools/prompt/PromptTitle'\nimport { mixinBasic, mixinIsEdit } from '@/components/tools/mixin/mixin'\nimport { getCategoryList, catattrForm, onSave } from '../basic_lib/index'\nimport { findParentId } from 'utils/utils.js'\n\nexport default {\n  name: 'CatattrInfo',\n  mixins: [mixinBasic, mixinIsEdit],\n  data() {\n    return {\n      catAttrInfo: this.$form.createForm(this),\n      options: [],\n      // 可选项\n      isOptional: false,\n      catattrOptional: '',\n      labelList: [],\n      // 详情\n      viewCatattrInfo: {},\n      // 所属分类\n      catattrSuperiorObj: {\n        id: [],\n        val: []\n      }\n    }\n  },\n  props: {\n    catattrInfo: {\n      type: Object,\n      default: function() {\n        return {}\n      }\n    }\n  },\n  created() {},\n  methods: {\n    // 所属分类\n    onChangeCatattrName() {},\n    // 输入类型\n    handleChangeInputType(value) {\n      console.log(value)\n      if (value !== 'INPUT') {\n        this.isOptional = true\n        return\n      }\n      this.isOptional = false\n    },\n    // 值的类型\n    handleChangeInputValue(value) {\n      console.log(value)\n    },\n    // 可选项键盘添加标签\n    onAddLabel() {\n      if (this.catattrOptional !== '') {\n        this.labelList.push({\n          val: this.catattrOptional\n        })\n        console.log(this.labelList)\n        this.catattrOptional = ''\n      }\n    },\n    // 删除标签\n    closeLabel(index) {\n      console.log(index)\n      this.labelList.splice(index, 1)\n      console.log(this.labelList)\n    },\n    // 是否搜索属性\n    onChangeSearch(checked) {\n      console.log(checked)\n    },\n    // 是否列表属性\n    onChangeListAttr(checked) {\n      console.log(checked)\n    },\n    // 是否必填\n    onChangeDefault(checked) {\n      console.log(checked)\n    },\n    // 提交\n    onSubmit(e) {\n      e.preventDefault()\n      this.getFormData(null, catattrForm)\n    },\n    // 保存修改\n    onSave(e) {\n      e.preventDefault()\n      this.getFormData(this.viewCatattrInfo.id, onSave)\n    },\n    // 编辑 || 取消\n    isDisabled(val) {\n      const edit = new Promise(resolved => {\n        // Input选中\n        this.disabled = !val\n        // label color\n        this.isLabelColor = !this.isLabelColor\n        resolved()\n      })\n      edit.then(() => {\n        if (this.disabled) {\n          this.setFormData()\n        }\n      })\n    },\n    // 删除\n    isDelete(val) {\n      // deleteCategory.call(this, this.viewCatattrInfo.id).then(() => {\n      this.$emit('isDrawer', val)\n      // })\n    },\n    // FormData\n    async getFormData(id, postCatattr) {\n      this.catAttrInfo.validateFields((err, values) => {\n        if (!err) {\n          console.log(values)\n          this.loading = true\n          const params = {\n            id,\n            catId: Array.from(values.catattrClass)\n              .slice(-1)\n              .join(''), // 所属类目\n            name: values.catattrName, // 属性名称\n            searchProp: values.catattrSearch, // 是否搜索属性\n            listProp: values.catattrListAttr, // 是否列表属性\n            required: values.catattrDefault, // 是否必填\n            inputType: values.catattrInputType.toString(), // 输入类型\n            valType: values.catattrValueType.toString(), // 值类型\n            unit: values.catattrUnit, // 计量单位\n            optionList: Array.from(this.labelList), // 可选项\n            attrType: '', // 属性类型\n            remark: values.catattrRemark // 属性类型\n          }\n          // console.log(params)\n          postCatattr.call(this, params)\n        }\n      })\n    },\n    // Form详情\n    setFormData() {\n      this.catAttrInfo.setFieldsValue({\n        catattrClass: [...this.catattrSuperiorObj.id],\n        catattrName: this.viewCatattrInfo.name,\n        catattrSearch: this.viewCatattrInfo.searchProp,\n        catattrListAttr: this.viewCatattrInfo.listProp,\n        catattrDefault: this.viewCatattrInfo.required,\n        catattrInputType: this.viewCatattrInfo.inputType,\n        catattrValueType: this.viewCatattrInfo.valType,\n        catattrUnit: this.viewCatattrInfo.unit,\n        catattrRemark: this.viewCatattrInfo.remark\n      })\n    }\n  },\n  watch: {\n    // Info\n    catattrInfo: {\n      handler(val) {\n        this.viewCatattrInfo = Object.assign({}, val)\n        // 判断可选项是否显示\n        if (val.inputType && val.inputType !== 'INPUT') {\n          this.labelList = []\n          this.isOptional = true\n          val.optionList.forEach(item => {\n            this.labelList.push({\n              val: item.val\n            })\n          })\n        }\n        // 获取所属分类对象层级元素\n        getCategoryList.call(this).then(() => {\n          this.catattrSuperiorObj.val = findParentId(\n            val.catId,\n            this.options,\n            'name'\n          )\n          this.catattrSuperiorObj.id = findParentId(\n            val.catId,\n            this.options,\n            'id'\n          )\n        })\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  components: {\n    'prompt-title': PromptTitle\n  }\n}\n",{"version":3,"sources":["CatattrInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CatattrInfo.vue","sourceRoot":"src/views/product/bom/catattr/child_info","sourcesContent":["<template>\n  <div class=\"catattr-info\">\n    <prompt-title @isDisabled=\"isDisabled\" @isDelete=\"isDelete\"></prompt-title>\n    <a-row>\n      <a-col :span=\"24\">\n        <h3 class=\"catattrInfo-title\">基本信息</h3>\n      </a-col>\n    </a-row>\n    <a-row>\n      <a-col :span=\"24\">\n        <a-form :form=\"catAttrInfo\" layout=\"horizontal\" hideRequiredMark>\n          <a-row>\n            <a-col :span=\"8\">\n              <a-form-item\n                label=\"所属分类\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-cascader\n                  :options=\"options\"\n                  :fieldNames=\"{ label: 'name', value: 'id', children: 'childrens' }\"\n                  @change=\"onChangeCatattrName\"\n                  placeholder=\"请输入分类名称\"\n                  v-decorator=\"['catattrClass', {rules: [{ required: true, message: '请输入分类名称' }]}]\"\n                  v-if=\"disabled\"\n                  changeOnSelect\n                >\n                  <a-icon slot=\"suffixIcon\" type=\"down\"/>\n                </a-cascader>\n                <template v-else=\"!disabled\">{{catattrSuperiorObj.val.slice(-1).join('')}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\">\n              <a-form-item\n                label=\"属性名称\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-input\n                  v-decorator=\"['catattrName', {rules: [{ required: true, message: '请输入属性名称' }]}]\"\n                  placeholder=\"请输入属性名称\"\n                  v-if=\"disabled\"\n                />\n                <template v-else=\"!disabled\">{{viewCatattrInfo.name}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\">\n              <a-form-item\n                label=\"计量单位\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-input v-if=\"disabled\" v-decorator=\"['catattrUnit']\" placeholder=\"请输入计量单位\"/>\n                <template v-else=\"!disabled\">{{viewCatattrInfo.unit}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\">\n              <a-form-item\n                label=\"输入类型\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-select\n                  v-if=\"disabled\"\n                  v-decorator=\"['catattrInputType', { initialValue: 'INPUT' }]\"\n                  placeholder=\"请输入类型\"\n                  @change=\"handleChangeInputType\"\n                >\n                  <a-select-option value=\"INPUT\">手输</a-select-option>\n                  <a-select-option value=\"RADIO\">单选</a-select-option>\n                  <a-select-option value=\"CHECKBOX\">多选</a-select-option>\n                </a-select>\n                <template\n                  v-else=\"!disabled\"\n                >{{viewCatattrInfo.inputType === 'INPUT' ? '手输' : (viewCatattrInfo.inputType === 'RADIO' ? '单选' : '多选')}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\">\n              <a-form-item\n                label=\"值的类型\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-select\n                  v-decorator=\"['catattrValueType', { initialValue: 'STRING' }]\"\n                  @change=\"handleChangeInputValue\"\n                  placeholder=\"请输入值的类型\"\n                  v-if=\"disabled\"\n                >\n                  <a-select-option value=\"STRING\">字符串</a-select-option>\n                  <a-select-option value=\"NUMBER\">整数</a-select-option>\n                  <a-select-option value=\"DECIMAL\">浮点数</a-select-option>\n                </a-select>\n                <template\n                  v-else=\"!disabled\"\n                >{{viewCatattrInfo.valType === 'STRING' ? '字符串' : (viewCatattrInfo.valType === 'NUMBER' ? '整数' : '浮点数')}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"16\" v-if=\"isOptional\">\n              <a-form-item\n                label=\"可选项\"\n                :label-col=\"{span: 3}\"\n                :wrapper-col=\"{span: 19}\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-input\n                  v-model.trim=\"catattrOptional\"\n                  @keyup.space=\"onAddLabel\"\n                  placeholder=\"请按空格键生成标签\"\n                  v-if=\"disabled\"\n                />\n                <ul class=\"label-box\" v-if=\"disabled\">\n                  <li v-for=\"(item, index) in labelList\" :key=\"index\" class=\"create-label\">\n                    <span>{{ item.val }}</span>\n                    <a-icon type=\"close\" @click=\"closeLabel(index)\"/>\n                  </li>\n                </ul>\n                <template v-else=\"!disabled\">\n                  <ul class=\"label-box\">\n                    <li v-for=\"(item, index) in labelList\" :key=\"index\" class=\"create-label\">\n                      <span>{{ item.val }}</span>\n                    </li>\n                  </ul>\n                </template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"16\">\n              <a-form-item\n                label=\"是否搜索属性\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-switch\n                  v-if=\"disabled\"\n                  @change=\"onChangeSearch\"\n                  v-decorator=\"['catattrSearch', {valuePropName: 'checked', initialValue: false}]\"\n                />\n                <template v-else=\"!disabled\">{{viewCatattrInfo.searchProp ? '是' : '否'}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"16\">\n              <a-form-item\n                label=\"是否列表属性\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-switch\n                  v-if=\"disabled\"\n                  @change=\"onChangeListAttr\"\n                  v-decorator=\"['catattrListAttr', {valuePropName: 'checked', initialValue: false}]\"\n                />\n                <template v-else=\"!disabled\">{{viewCatattrInfo.listProp ? '是' : '否'}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"16\">\n              <a-form-item\n                label=\"是否必填\"\n                :label-col=\"labelCol\"\n                :wrapper-col=\"wrapperCol\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-switch\n                  v-if=\"disabled\"\n                  @change=\"onChangeDefault\"\n                  v-decorator=\"['catattrDefault', {valuePropName: 'checked', initialValue: false}]\"\n                />\n                <template v-else=\"!disabled\">{{viewCatattrInfo.required ? '是' : '否'}}</template>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"16\">\n              <a-form-item\n                label=\"备注\"\n                :label-col=\"{span: 3}\"\n                :wrapper-col=\"{span: 19}\"\n                :class=\"{labelColor: isLabelColor}\"\n              >\n                <a-input v-decorator=\"['catattrRemark']\" v-if=\"disabled\" placeholder=\"请输入备注\"/>\n                <template v-else=\"!disabled\">{{viewCatattrInfo.remark}}</template>\n              </a-form-item>\n            </a-col>\n          </a-row>\n        </a-form>\n      </a-col>\n    </a-row>\n    <div\n      :style=\"{\n          position: 'absolute',\n          left: 0,\n          bottom: 0,\n          width: '100%',\n          borderTop: '1px solid #E9E9E9',\n          padding: '10px 16px',\n          background: '#FFF',\n          textAlign: 'right',\n        }\"\n    >\n      <a-button :style=\"{marginRight: '8px'}\" @click=\"onClose\">取消</a-button>\n      <a-button @click=\"onSubmit\" type=\"primary\" :loading=\"loading\" v-if=\"isEdit\">提交</a-button>\n      <a-button\n        @click=\"onSave\"\n        type=\"primary\"\n        :disabled=\"!disabled\"\n        :loading=\"loading\"\n        v-else=\"isEdit\"\n      >保存</a-button>\n    </div>\n  </div>\n</template>\n<script>\nimport PromptTitle from '@/components/tools/prompt/PromptTitle'\nimport { mixinBasic, mixinIsEdit } from '@/components/tools/mixin/mixin'\nimport { getCategoryList, catattrForm, onSave } from '../basic_lib/index'\nimport { findParentId } from 'utils/utils.js'\n\nexport default {\n  name: 'CatattrInfo',\n  mixins: [mixinBasic, mixinIsEdit],\n  data() {\n    return {\n      catAttrInfo: this.$form.createForm(this),\n      options: [],\n      // 可选项\n      isOptional: false,\n      catattrOptional: '',\n      labelList: [],\n      // 详情\n      viewCatattrInfo: {},\n      // 所属分类\n      catattrSuperiorObj: {\n        id: [],\n        val: []\n      }\n    }\n  },\n  props: {\n    catattrInfo: {\n      type: Object,\n      default: function() {\n        return {}\n      }\n    }\n  },\n  created() {},\n  methods: {\n    // 所属分类\n    onChangeCatattrName() {},\n    // 输入类型\n    handleChangeInputType(value) {\n      console.log(value)\n      if (value !== 'INPUT') {\n        this.isOptional = true\n        return\n      }\n      this.isOptional = false\n    },\n    // 值的类型\n    handleChangeInputValue(value) {\n      console.log(value)\n    },\n    // 可选项键盘添加标签\n    onAddLabel() {\n      if (this.catattrOptional !== '') {\n        this.labelList.push({\n          val: this.catattrOptional\n        })\n        console.log(this.labelList)\n        this.catattrOptional = ''\n      }\n    },\n    // 删除标签\n    closeLabel(index) {\n      console.log(index)\n      this.labelList.splice(index, 1)\n      console.log(this.labelList)\n    },\n    // 是否搜索属性\n    onChangeSearch(checked) {\n      console.log(checked)\n    },\n    // 是否列表属性\n    onChangeListAttr(checked) {\n      console.log(checked)\n    },\n    // 是否必填\n    onChangeDefault(checked) {\n      console.log(checked)\n    },\n    // 提交\n    onSubmit(e) {\n      e.preventDefault()\n      this.getFormData(null, catattrForm)\n    },\n    // 保存修改\n    onSave(e) {\n      e.preventDefault()\n      this.getFormData(this.viewCatattrInfo.id, onSave)\n    },\n    // 编辑 || 取消\n    isDisabled(val) {\n      const edit = new Promise(resolved => {\n        // Input选中\n        this.disabled = !val\n        // label color\n        this.isLabelColor = !this.isLabelColor\n        resolved()\n      })\n      edit.then(() => {\n        if (this.disabled) {\n          this.setFormData()\n        }\n      })\n    },\n    // 删除\n    isDelete(val) {\n      // deleteCategory.call(this, this.viewCatattrInfo.id).then(() => {\n      this.$emit('isDrawer', val)\n      // })\n    },\n    // FormData\n    async getFormData(id, postCatattr) {\n      this.catAttrInfo.validateFields((err, values) => {\n        if (!err) {\n          console.log(values)\n          this.loading = true\n          const params = {\n            id,\n            catId: Array.from(values.catattrClass)\n              .slice(-1)\n              .join(''), // 所属类目\n            name: values.catattrName, // 属性名称\n            searchProp: values.catattrSearch, // 是否搜索属性\n            listProp: values.catattrListAttr, // 是否列表属性\n            required: values.catattrDefault, // 是否必填\n            inputType: values.catattrInputType.toString(), // 输入类型\n            valType: values.catattrValueType.toString(), // 值类型\n            unit: values.catattrUnit, // 计量单位\n            optionList: Array.from(this.labelList), // 可选项\n            attrType: '', // 属性类型\n            remark: values.catattrRemark // 属性类型\n          }\n          // console.log(params)\n          postCatattr.call(this, params)\n        }\n      })\n    },\n    // Form详情\n    setFormData() {\n      this.catAttrInfo.setFieldsValue({\n        catattrClass: [...this.catattrSuperiorObj.id],\n        catattrName: this.viewCatattrInfo.name,\n        catattrSearch: this.viewCatattrInfo.searchProp,\n        catattrListAttr: this.viewCatattrInfo.listProp,\n        catattrDefault: this.viewCatattrInfo.required,\n        catattrInputType: this.viewCatattrInfo.inputType,\n        catattrValueType: this.viewCatattrInfo.valType,\n        catattrUnit: this.viewCatattrInfo.unit,\n        catattrRemark: this.viewCatattrInfo.remark\n      })\n    }\n  },\n  watch: {\n    // Info\n    catattrInfo: {\n      handler(val) {\n        this.viewCatattrInfo = Object.assign({}, val)\n        // 判断可选项是否显示\n        if (val.inputType && val.inputType !== 'INPUT') {\n          this.labelList = []\n          this.isOptional = true\n          val.optionList.forEach(item => {\n            this.labelList.push({\n              val: item.val\n            })\n          })\n        }\n        // 获取所属分类对象层级元素\n        getCategoryList.call(this).then(() => {\n          this.catattrSuperiorObj.val = findParentId(\n            val.catId,\n            this.options,\n            'name'\n          )\n          this.catattrSuperiorObj.id = findParentId(\n            val.catId,\n            this.options,\n            'id'\n          )\n        })\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  components: {\n    'prompt-title': PromptTitle\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n@import '~styles/variable.less';\n\n.catattr-info {\n  .catattrInfo-title {\n    margin-bottom: 10px;\n    .h3_title();\n  }\n  .labelColor {\n    /deep/ .ant-form-item-label label {\n      .labelColor();\n    }\n  }\n  .label-box {\n    margin-bottom: 0;\n    .create-label {\n      background: #1890ff;\n      color: #fff;\n      border-radius: 4px;\n      display: inline-block;\n      height: 24px;\n      line-height: 12px;\n      padding: 6px;\n      margin: 0 4px;\n      i {\n        font-size: 10px;\n        margin-left: 4px;\n      }\n    }\n  }\n}\n</style>"]}]}