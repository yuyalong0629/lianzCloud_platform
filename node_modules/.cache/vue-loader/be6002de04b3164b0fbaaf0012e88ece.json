{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/cust/child_info/ContactForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/cust/child_info/ContactForm.vue","mtime":1563190507889},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { columns } from '../basic_lib/column'\n\nexport default {\n  name: 'ConcatForm',\n  data() {\n    return {\n      data: [],\n      columns,\n      count: 0,\n      cacheData: []\n    }\n  },\n  props: {\n    mallUsersInfo: {\n      type: Array,\n      default: []\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  methods: {\n    handleAdd() {\n      const { count, data } = this\n      const newData = {\n        key: count,\n        name: '',\n        sex: '0',\n        phone: '',\n        companyPosition: '',\n        email: '',\n        contact: '',\n        deleted: false,\n        editable: true\n      }\n      this.data = [...data, newData]\n      this.count = count + 1\n      // // 保存初始化Obj\n      // this.cacheData = this.data.map(item => ({ ...item }))\n    },\n    handleChangeSelect(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n        this.$emit('userNatureDtos', this.data)\n      }\n      this.data = [...newData]\n      console.log(this.data)\n    },\n    onDelete(key) {\n      const dataSource = [...this.data]\n      this.data = dataSource.filter(item => item.key !== key)\n      this.$emit('userNatureDtos', this.data)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target && target.name && target.phone) {\n        target.editable = false\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        this.$emit('userNatureDtos', this.data)\n      } else {\n        this.$message.error('请先完善信息')\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      const targetData = this.cacheData.filter(item => key === item.key)[0]\n      if (target && target.name && target.phone && targetData) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        target.editable = false\n        this.data = newData\n        console.log(this.data)\n      } else {\n        this.data = newData.filter(item => item.key !== key)\n        console.log(this.data)\n      }\n    }\n  },\n  watch: {\n    mallUsersInfo: {\n      handler(val) {\n        if (val.length) {\n          const { count, data } = this\n          val.forEach((item, index) => {\n            this.data[index] = {\n              key: index,\n              name: item.name,\n              sex: item.sex === 'MALE' ? '0' : '1',\n              phone: item.phone,\n              companyPosition: item.companyPosition || '无',\n              email: item.email || '无',\n              contact: item.contact || '无',\n              custId: item.custId,\n              id: item.id,\n              deleted: false,\n              editable: false\n            }\n            this.count = index + 1\n          })\n          // 保存初始化Obj\n          this.cacheData = this.data.map(item => ({\n            ...item\n          }))\n          console.log(this.cacheData)\n          this.$emit('userNatureDtos', this.data)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n",{"version":3,"sources":["ContactForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"ContactForm.vue","sourceRoot":"src/views/cust/child_info","sourcesContent":["<template>\n  <div class=\"concat-form\">\n    <a-table :columns=\"columns\" :dataSource=\"data\" :pagination=\"false\">\n      <template\n        v-for=\"col in ['name', 'sex', 'phone', 'companyPosition', 'email', 'contact']\"\n        :slot=\"col\"\n        slot-scope=\"text, record, index\"\n      >\n        <div :key=\"col\">\n          <a-input\n            v-if=\"record.editable && col !== 'sex'\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <a-select\n            v-if=\"record.editable && col === 'sex'\"\n            :value=\"record.sex\"\n            style=\"width: 80px\"\n            @change=\"(value) => handleChangeSelect(value, record.key, col)\"\n          >\n            <a-select-option value=\"0\">男</a-select-option>\n            <a-select-option value=\"1\">女</a-select-option>\n          </a-select>\n          <template>\n            <span v-if=\"!record.editable && col !== 'sex'\">{{ text }}</span>\n            <span v-if=\"!record.editable && col === 'sex'\">{{ text === '0' ? '男' : '女' }}</span>\n          </template>\n        </div>\n      </template>\n      <template v-if=\"childDisabled\" slot=\"operation\" slot-scope=\"text, record, index\">\n        <div class=\"editable-row-operations\">\n          <span v-if=\"record.editable\">\n            <a @click=\"() => save(record.key)\">保存</a>\n            <a @click=\"() => cancel(record.key)\">取消</a>\n          </span>\n          <span v-else>\n            <a @click=\"() => edit(record.key)\">编辑</a>\n            <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => onDelete(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </div>\n      </template>\n    </a-table>\n    <a-button\n      style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\"\n      v-if=\"childDisabled\"\n      type=\"dashed\"\n      icon=\"plus\"\n      @click.stop=\"handleAdd\"\n    >添加联系人</a-button>\n  </div>\n</template>\n<script>\nimport { columns } from '../basic_lib/column'\n\nexport default {\n  name: 'ConcatForm',\n  data() {\n    return {\n      data: [],\n      columns,\n      count: 0,\n      cacheData: []\n    }\n  },\n  props: {\n    mallUsersInfo: {\n      type: Array,\n      default: []\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  methods: {\n    handleAdd() {\n      const { count, data } = this\n      const newData = {\n        key: count,\n        name: '',\n        sex: '0',\n        phone: '',\n        companyPosition: '',\n        email: '',\n        contact: '',\n        deleted: false,\n        editable: true\n      }\n      this.data = [...data, newData]\n      this.count = count + 1\n      // // 保存初始化Obj\n      // this.cacheData = this.data.map(item => ({ ...item }))\n    },\n    handleChangeSelect(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n        this.$emit('userNatureDtos', this.data)\n      }\n      this.data = [...newData]\n      console.log(this.data)\n    },\n    onDelete(key) {\n      const dataSource = [...this.data]\n      this.data = dataSource.filter(item => item.key !== key)\n      this.$emit('userNatureDtos', this.data)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.data = newData\n      }\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target && target.name && target.phone) {\n        target.editable = false\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        this.$emit('userNatureDtos', this.data)\n      } else {\n        this.$message.error('请先完善信息')\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      const targetData = this.cacheData.filter(item => key === item.key)[0]\n      if (target && target.name && target.phone && targetData) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        target.editable = false\n        this.data = newData\n        console.log(this.data)\n      } else {\n        this.data = newData.filter(item => item.key !== key)\n        console.log(this.data)\n      }\n    }\n  },\n  watch: {\n    mallUsersInfo: {\n      handler(val) {\n        if (val.length) {\n          const { count, data } = this\n          val.forEach((item, index) => {\n            this.data[index] = {\n              key: index,\n              name: item.name,\n              sex: item.sex === 'MALE' ? '0' : '1',\n              phone: item.phone,\n              companyPosition: item.companyPosition || '无',\n              email: item.email || '无',\n              contact: item.contact || '无',\n              custId: item.custId,\n              id: item.id,\n              deleted: false,\n              editable: false\n            }\n            this.count = index + 1\n          })\n          // 保存初始化Obj\n          this.cacheData = this.data.map(item => ({\n            ...item\n          }))\n          console.log(this.cacheData)\n          this.$emit('userNatureDtos', this.data)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.editable-row-operations a {\n  margin-right: 8px;\n}\n</style>\n"]}]}