{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/procurement/purchasList/other/inputSearch.vue?vue&type=style&index=0&id=ae8abfc6&lang=less&scoped=true&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/procurement/purchasList/other/inputSearch.vue","mtime":1564625928912},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/less-loader/dist/cjs.js","mtime":1556420627437},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.inputWidth {\n  width: 200px;\n}\n",{"version":3,"sources":["inputSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA","file":"inputSearch.vue","sourceRoot":"src/views/procurement/purchasList/other","sourcesContent":["<template>\n  <a-form layout=\"inline\">\n    <a-form-item label=\"规格\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n      <a-select\n        class=\"inputWidth\"\n        showSearch\n        allowClear\n        :showArrow=\"false\"\n        :filterOption=\"false\"\n        :defaultActiveFirstOption=\"false\"\n        @search=\"val=>handleSelectChange(val,'spec')\"\n        @change=\"(val)=>{inputChange(val,'spec')}\"\n        @popupScroll=\"e=>currentPageChange(e,'spec')\"\n      >\n        <a-select-option v-for=\"item in odSpecList\" :key=\"item\">{{item}}</a-select-option>\n      </a-select>\n    </a-form-item>\n    <a-form-item label=\"材质\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n      <a-select\n        class=\"inputWidth\"\n        showSearch\n        allowClear\n        :showArrow=\"false\"\n        :filterOption=\"false\"\n        :defaultActiveFirstOption=\"false\"\n        @search=\"val=>handleSelectChange(val,'cz')\"\n        @change=\"(val)=>{inputChange(val,'cz')}\"\n        @popupScroll=\"e=>currentPageChange(e,'cz')\"\n        :getPopupContainer=\"triggerNode => triggerNode.parentNode\"\n      >\n        <a-select-option v-for=\"item in textures\" :key=\"item\">{{item}}</a-select-option>\n      </a-select>\n    </a-form-item>\n  </a-form>\n</template>\n\n<script>\nimport { get } from '@/api/axios.js'\nimport api from '@/api/index.js'\nimport { mixinBasic } from '@/components/tools/mixin/mixin'\nimport { mixinCurrentPage } from '@/views/sale/mixin/minxinSale'\nexport default {\n  mixins: [mixinBasic, mixinCurrentPage],\n  data() {\n    return {\n      specCurrentPage: 1,\n      czCurrentPage: 1,\n      odSpecList: [],\n      odSpecPages: 0,\n      odSpecListValue: '',\n      textures: [],\n      texturesValue: '',\n      texturesPages: 0,\n      data: {\n        cz: '',\n        spec: ''\n      },\n      timer: ''\n    }\n  },\n  created() {\n    this.getFactoryMaterialRequireSpec()\n    this.getFactoryMaterialRequireCz()\n  },\n  methods: {\n    inputChange(val, type) {\n      this.dataCompany = []\n      const data = this.data\n      data[type] = val\n      if (this.timer !== '') {\n        clearTimeout(this.timer)\n      }\n      this.timer = setTimeout(() => {\n        this.$emit('dataChange', data)\n      }, 500)\n    },\n    handleSelectChange(val, type) {\n      if (this.timer !== '') {\n        clearTimeout(this.timer)\n      }\n      this.timer = setTimeout(() => {\n        if (type === 'cz') {\n          this.textures = []\n          this.texturesValue = val\n          this.getFactoryMaterialRequireCz()\n        } else {\n          this.odSpecList = []\n          this.odSpecListValue = val\n          this.getFactoryMaterialRequireSpec()\n        }\n      }, 500)\n    },\n    currentPageChange(e, type) {\n      const result = this.getCurrentPageChange(e)\n      if (result) {\n        if (type === 'cz') {\n          this.getFactoryMaterialRequireCz(this.czCurrentPage)\n        } else if (type === 'spec') {\n          this.getFactoryMaterialRequireSpec(this.specCurrentPage)\n        }\n      }\n    },\n    // 列表所有待采购材质\n    getFactoryMaterialRequireCz(currentPage = 1, pageSize = 50) {\n      if (currentPage > this.texturesPages && this.texturesPages !== 0) {\n        return\n      }\n      get(api.getFactoryMaterialRequireCz, { cz: this.texturesValue, currentPage, pageSize }).then(res => {\n        if (res.data.code === 0) {\n          const data = res.data.data.records\n          const target = data.filter(item => item !== null)\n          const textures = target.filter(item => item.cz !== null)\n          const czList = []\n          textures.forEach(item => {\n            czList.push(item.cz)\n          })\n          this.textures = new Set(this.textures.concat(czList))\n          this.texturesPages = Number(res.data.data.pages)\n          this.czCurrentPage += 1\n        }\n      })\n    },\n    // 列表所有待采购规格\n    getFactoryMaterialRequireSpec(currentPage = 1, pageSize = 50) {\n      if (currentPage > this.odSpecPages && this.odSpecPages !== 0) {\n        return\n      }\n      get(api.getFactoryMaterialRequireSpec, { spec: this.odSpecListValue, currentPage, pageSize }).then(res => {\n        if (res.data.code === 0) {\n          const data = res.data.data.records\n          const target = data.filter(item => item !== null)\n          const odSpecList = target.filter(item => item.spec !== null)\n          const specList = []\n          odSpecList.forEach(item => {\n            specList.push(item.spec)\n          })\n          this.odSpecList = new Set(this.odSpecList.concat(specList))\n          this.odSpecPages = Number(res.data.data.pages)\n          this.specCurrentPage += 1\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.inputWidth {\n  width: 200px;\n}\n</style>\n"]}]}