{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/components/upload/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/components/upload/Upload.vue","mtime":1564984768283},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'component_name',\n  data() {\n    return {\n      previewVisible: false,\n      previewImage: '',\n      // url\n      fileList: [],\n      headers: {\n        'AUTH-TOKEN': localStorage.getItem('ACCESS_TOKEN'),\n        companyId: localStorage.getItem('companyId')\n      },\n      propsFileList: [],\n      count: 0\n    }\n  },\n  props: {\n    picInfoData: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    // upload\n    handleCancel() {\n      this.previewVisible = false\n    },\n    handlePreview(file) {\n      this.previewImage = file.url || file.thumbUrl\n      this.previewVisible = true\n    },\n    async handleChange({ file, fileList }) {\n      this.fileList = await fileList\n      console.log(this.fileList)\n      this.count++\n      if (this.count === 3) {\n        this.propsFileList = []\n        this.fileList.forEach(item => {\n          console.log(item)\n          if (item.response) {\n            this.propsFileList.push({\n              picUrl: item.response.data\n            })\n          } else {\n            this.propsFileList.push({\n              ...item\n            })\n          }\n        })\n        this.$emit('propsFileList', this.propsFileList)\n        this.count = 0\n      }\n    }\n  },\n  watch: {\n    picInfoData: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          this.fileList = []\n          val.forEach(item => {\n            this.fileList.push({\n              ...item,\n              url: item.picUrl,\n              uid: Math.floor(Math.random() * 100),\n              name: 'xxx.png'\n            })\n          })\n          console.log(this.fileList)\n          this.$emit(\n            'propsFileList',\n            this.fileList.map(item => {\n              return {\n                ...item\n              }\n            })\n          )\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components/upload","sourcesContent":["<template>\n  <div class=\"clearfix\" style=\"marginLeft: 16px;\">\n    <a-upload\n      action=\"/api/ic/user/file/uploadFile\"\n      listType=\"picture-card\"\n      :data=\"{'bizType': 'GOODS'}\"\n      :headers=\"headers\"\n      :fileList=\"fileList\"\n      @preview=\"handlePreview\"\n      @change=\"handleChange\"\n    >\n      <div v-if=\"fileList.length < 10\">\n        <a-icon type=\"plus\" />\n        <div class=\"ant-upload-text\">Upload</div>\n      </div>\n    </a-upload>\n    <a-modal :visible=\"previewVisible\" :footer=\"null\" @cancel=\"handleCancel\">\n      <img alt=\"example\" style=\"width: 100%\" :src=\"previewImage\" />\n    </a-modal>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'component_name',\n  data() {\n    return {\n      previewVisible: false,\n      previewImage: '',\n      // url\n      fileList: [],\n      headers: {\n        'AUTH-TOKEN': localStorage.getItem('ACCESS_TOKEN'),\n        companyId: localStorage.getItem('companyId')\n      },\n      propsFileList: [],\n      count: 0\n    }\n  },\n  props: {\n    picInfoData: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    // upload\n    handleCancel() {\n      this.previewVisible = false\n    },\n    handlePreview(file) {\n      this.previewImage = file.url || file.thumbUrl\n      this.previewVisible = true\n    },\n    async handleChange({ file, fileList }) {\n      this.fileList = await fileList\n      console.log(this.fileList)\n      this.count++\n      if (this.count === 3) {\n        this.propsFileList = []\n        this.fileList.forEach(item => {\n          console.log(item)\n          if (item.response) {\n            this.propsFileList.push({\n              picUrl: item.response.data\n            })\n          } else {\n            this.propsFileList.push({\n              ...item\n            })\n          }\n        })\n        this.$emit('propsFileList', this.propsFileList)\n        this.count = 0\n      }\n    }\n  },\n  watch: {\n    picInfoData: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          this.fileList = []\n          val.forEach(item => {\n            this.fileList.push({\n              ...item,\n              url: item.picUrl,\n              uid: Math.floor(Math.random() * 100),\n              name: 'xxx.png'\n            })\n          })\n          console.log(this.fileList)\n          this.$emit(\n            'propsFileList',\n            this.fileList.map(item => {\n              return {\n                ...item\n              }\n            })\n          )\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n</style>"]}]}