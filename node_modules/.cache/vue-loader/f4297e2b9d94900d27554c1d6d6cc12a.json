{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/cust/child_info/AddressForm.vue?vue&type=style&index=0&id=606f50a8&lang=less&scoped=true&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/cust/child_info/AddressForm.vue","mtime":1564040157658},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/less-loader/dist/cjs.js","mtime":1556420627437},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.editable-row-operations a {\n  margin-right: 8px;\n}\n",{"version":3,"sources":["AddressForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuSA;AACA;AACA","file":"AddressForm.vue","sourceRoot":"src/views/cust/child_info","sourcesContent":["<template>\n  <div class=\"address-form\">\n    <a-table :columns=\"columnAddress\" :dataSource=\"data\" :pagination=\"false\" :scroll=\"{ x: 1240 }\">\n      <template\n        v-for=\"col in ['receiver', 'phone', 'address', 'detailAddr', 'defaultGoodsAddr', 'postCode']\"\n        :slot=\"col\"\n        slot-scope=\"text, record, index\"\n      >\n        <div :key=\"col\">\n          <a-input\n            v-if=\"record.editable && col !== 'address' && col !== 'defaultGoodsAddr'\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <a-cascader\n            v-if=\"record.editable && col === 'address'\"\n            :defaultValue=\"staging[record.key]\"\n            changeOnSelect\n            placeholder=\"请选择地址\"\n            @change=\"(value, selectedOptions) => handleChangeArea(value, selectedOptions, record, col)\"\n            style=\"width: 200px;\"\n            :fieldNames=\"{ label: 'name', value: 'id', children: 'childrens' }\"\n            :options=\"options\"\n          ></a-cascader>\n          <a-switch\n            v-if=\"record.editable && col === 'defaultGoodsAddr'\"\n            checkedChildren=\"是\"\n            unCheckedChildren=\"否\"\n            :checked=\"record.defaultGoodsAddr\"\n            @change=\"(value) => handleChangeSwitch(value, record, col)\"\n          />\n          <template>\n            <span\n              v-if=\"!record.editable && col !== 'address' && col !== 'defaultGoodsAddr'\"\n            >{{ text }}</span>\n            <span v-if=\"!record.editable && col === 'address'\">{{ text ? text.join('/') : '' }}</span>\n            <span\n              v-if=\"!record.editable && col === 'defaultGoodsAddr'\"\n            >{{ text === true ? '是' : '否' }}</span>\n          </template>\n        </div>\n      </template>\n      <template v-if=\"childDisabled\" slot=\"operation\" slot-scope=\"text, record, index\">\n        <div class=\"editable-row-operations\">\n          <span v-if=\"record.editable\">\n            <a @click=\"() => save(record.key)\">保存</a>\n            <!-- <a @click=\"() => cancel(record.key)\">取消</a> -->\n          </span>\n          <span v-else>\n            <a @click=\"() => edit(record.key)\">编辑</a>\n            <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => onDelete(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </div>\n      </template>\n    </a-table>\n    <a-button\n      style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\"\n      v-if=\"childDisabled\"\n      type=\"dashed\"\n      icon=\"plus\"\n      @click.stop=\"handleAdd\"\n    >添加联系人</a-button>\n  </div>\n</template>\n<script>\nimport { columnAddress } from '../basic_lib/column'\nimport { areas } from 'utils/area.js'\nimport { findParentId } from '@/assets/utils/utils.js'\n\nexport default {\n  name: 'AddressForm',\n  data() {\n    return {\n      data: [],\n      columnAddress,\n      count: 0,\n      cacheData: [],\n      options: areas,\n      addressId: [],\n      // 暂存\n      staging: []\n    }\n  },\n  props: {\n    addressInfo: {\n      type: Array,\n      default: []\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  methods: {\n    handleChangeArea(value, selectedOptions, record, column) {\n      const newData = [...this.data]\n      const addressName = selectedOptions\n        ? selectedOptions.map(item => item.name)\n        : []\n      console.log(addressName)\n      const target = newData.filter(item => record.key === item.key)[0]\n      if (target) {\n        target[column] = addressName\n        this.data = newData\n        console.log(this.data)\n        this.staging[record.key] = selectedOptions\n          ? selectedOptions.map(item => item.id)\n          : []\n        console.log(this.staging)\n        console.log(record.key)\n      }\n    },\n    handleChangeSwitch(value, record, column) {\n      const newData = [...this.data]\n      const target = newData.map(item => {\n        return {\n          ...item,\n          defaultGoodsAddr: item.key === record.key ? value : false\n        }\n      })\n      this.data = [...target]\n      // console.log(this.data)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n    handleAdd() {\n      const { count, data } = this\n      // this.staging[count] = []\n      console.log(this.staging)\n      const newData = {\n        key: count,\n        receiver: '',\n        phone: '',\n        address: [],\n        detailAddr: '',\n        deleted: false,\n        defaultGoodsAddr: false,\n        postCode: '',\n        editable: true\n      }\n      this.data = [...data, newData]\n      this.count = count + 1\n      // 保存初始化Obj\n      // this.cacheData = this.data.map(item => ({ ...item }))\n      console.log(this.data)\n    },\n    onDelete(key) {\n      const newData = [...this.data]\n      this.data = newData.filter(item => item.key !== key)\n      const customerAddrList = []\n      this.data.slice(0).forEach((item, index) => {\n        customerAddrList[index] = {\n          ...item,\n          province: this.staging[index][0],\n          city: this.staging[index][1],\n          area: this.staging[index][2]\n        }\n      })\n      console.log(customerAddrList)\n      this.$emit('custAddrList', customerAddrList)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.addressId = this.staging[key]\n        this.data = newData\n        console.log(this.data)\n        console.log(this.staging)\n      }\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      // if (target && target.address.length && target.receiver && target.phone) {\n      if (target) {\n        target.editable = false\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        console.log(this.data)\n        // 阻止引用类型指向同一个堆内存\n        const customerAddrList = []\n        console.log(this.staging)\n        this.data.concat([]).forEach((item, index) => {\n          // if (item.staging[index].length) {\n          customerAddrList[index] = {\n            ...item,\n            province: this.staging[index] ? this.staging[index][0] : '',\n            city: this.staging[index] ? this.staging[index][1] : '',\n            area: this.staging[index] ? this.staging[index][2] : ''\n          }\n          // }\n        })\n        console.log(customerAddrList)\n        this.$emit('custAddrList', customerAddrList)\n      } else {\n        this.$message.error('请先完善信息')\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      const targetData = this.cacheData.filter(item => key === item.key)[0]\n      console.log(targetData)\n      if (\n        target &&\n        target.address.length &&\n        target.receiver &&\n        target.phone &&\n        targetData\n      ) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        target.editable = false\n        this.data = newData\n      } else {\n        this.data = newData.filter(item => item.key !== key)\n      }\n    }\n  },\n  watch: {\n    addressInfo: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          val.forEach((item, index) => {\n            this.staging[index] =\n              findParentId(\n                item.area ? item.area : item.city ? item.city : item.province,\n                this.options,\n                'id'\n              ) || []\n            console.log(this.staging)\n            this.data[index] = {\n              key: index,\n              receiver: item.receiver || '无',\n              phone: item.phone || '无',\n              address:\n                findParentId(\n                  item.area ? item.area : item.city ? item.city : item.province,\n                  this.options,\n                  'name'\n                ) || undefined,\n              detailAddr: item.detailAddr || '无',\n              defaultGoodsAddr: item.defaultGoodsAddr,\n              postCode: item.postCode || '无',\n              id: item.id,\n              custId: item.custId,\n              deleted: false,\n              editable: false\n            }\n            this.count = index + 1\n          })\n          console.log(this.data)\n          // 保存初始化Obj\n          this.cacheData = this.data.map(item => ({ ...item }))\n          console.log(this.cacheData)\n          // 阻止引用类型指向同一个堆内存\n          const customerAddrList = []\n          this.data.concat([]).forEach((item, index) => {\n            if (item.address) {\n              customerAddrList[index] = {\n                ...item\n              }\n            }\n          })\n          // console.log(customerAddrList)\n          this.$emit('custAddrList', customerAddrList)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    getAddress() {\n      return findParentId(this.custFormInfo.custArea, this.options, 'name')\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.editable-row-operations a {\n  margin-right: 8px;\n}\n</style>\n"]}]}