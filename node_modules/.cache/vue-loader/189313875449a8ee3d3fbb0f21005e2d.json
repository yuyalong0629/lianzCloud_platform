{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/ClassAttrForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/ClassAttrForm.vue","mtime":1562135417515},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mixinBasic, mixinIsEdit } from '@/components/tools/mixin/mixin'\nimport SelectComponent from './extends/SelectComponent'\nimport InputComponent from './extends/InputComponent'\nimport { getClassAttr } from 'goods/basic_lib/index'\nimport { setTimeout } from 'timers'\n\nexport default {\n  name: 'ClassAttr',\n  mixins: [mixinBasic, mixinIsEdit],\n  data() {\n    return {\n      classAttrInfoForm: this.$form.createForm(this),\n      componentData: [],\n      clssData: []\n    }\n  },\n  methods: {\n    // 接受子组件 $emit\n    categoryData(val) {\n      console.log(val)\n      this.clssData.push(val)\n      // 去重复\n      const hash = {}\n      const newData = this.clssData.reduceRight((item, next) => {\n        hash[next.catAttrId]\n          ? ''\n          : (hash[next.catAttrId] = true && item.push(next))\n        return item\n      }, [])\n      console.log(newData)\n      this.$emit('classData', newData)\n    }\n  },\n  props: {\n    classAttrVal: {\n      type: Array,\n      default: []\n    },\n    classAttrInfoData: {\n      type: Array,\n      default: []\n    },\n    classCatId: {\n      type: String,\n      default: ''\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    classAttrVal: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          this.componentData = []\n          val.forEach(item => {\n            if (item.inputType === 'INPUT') {\n              this.componentData.push({\n                name: item.name,\n                id: item.id,\n                required: item.required,\n                attrType: item.attrType,\n                valType: item.valType,\n                component: 'inputComponent'\n              })\n            }\n            if (item.inputType === 'RADIO' || item.inputType === 'CHECKBOX') {\n              this.componentData.push({\n                name: item.name,\n                id: item.id,\n                required: item.required,\n                attrType: item.attrType,\n                options: item.optionList,\n                component: 'selectComponent'\n              })\n            }\n          })\n          console.log(this.componentData)\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    classAttrInfoData: {\n      handler(val) {\n        if (val.length) {\n          getClassAttr(this.classCatId).then(res => {\n            if (res.data.code === 0) {\n              this.componentData = []\n              res.data.data.forEach((item, index) => {\n                const newData = val.filter((cItem, index) => {\n                  return item.id === cItem.catAttrId\n                })\n                if (item.inputType === 'INPUT') {\n                  this.componentData[index] = {\n                    name: item.name,\n                    id: item.id,\n                    required: item.required,\n                    attrType: item.attrType,\n                    valType: item.valType,\n                    component: 'inputComponent',\n                    val: newData[0].val,\n                    catAttrId: newData[0].catAttrId\n                  }\n                }\n                if (\n                  item.inputType === 'RADIO' ||\n                  item.inputType === 'CHECKBOX'\n                ) {\n                  this.componentData[index] = {\n                    name: item.name,\n                    id: item.id,\n                    required: item.required,\n                    attrType: item.attrType,\n                    options: item.optionList,\n                    component: 'selectComponent',\n                    val: newData[0].val,\n                    catAttrId: newData[0].catAttrId\n                  }\n                }\n              })\n              this.$emit('classData', this.componentData)\n            }\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  components: {\n    SelectComponent,\n    InputComponent\n  }\n}\n",{"version":3,"sources":["ClassAttrForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"ClassAttrForm.vue","sourceRoot":"src/views/product/pdm/goods/child_info/tab_goodsInfo","sourcesContent":["<template>\n  <a-form :form=\"classAttrInfoForm\" layout=\"horizontal\" hideRequiredMark>\n    <a-row>\n      <component\n        v-if=\"componentData.length\"\n        :is=\"item.component\"\n        v-for=\"(item, index) in componentData\"\n        :key=\"item.id\"\n        :data=\"{ data: item, index: index }\"\n        @categoryData=\"categoryData\"\n        :childDisabled=\"childDisabled\"\n      ></component>\n    </a-row>\n  </a-form>\n</template>\n<script>\nimport { mixinBasic, mixinIsEdit } from '@/components/tools/mixin/mixin'\nimport SelectComponent from './extends/SelectComponent'\nimport InputComponent from './extends/InputComponent'\nimport { getClassAttr } from 'goods/basic_lib/index'\nimport { setTimeout } from 'timers'\n\nexport default {\n  name: 'ClassAttr',\n  mixins: [mixinBasic, mixinIsEdit],\n  data() {\n    return {\n      classAttrInfoForm: this.$form.createForm(this),\n      componentData: [],\n      clssData: []\n    }\n  },\n  methods: {\n    // 接受子组件 $emit\n    categoryData(val) {\n      console.log(val)\n      this.clssData.push(val)\n      // 去重复\n      const hash = {}\n      const newData = this.clssData.reduceRight((item, next) => {\n        hash[next.catAttrId]\n          ? ''\n          : (hash[next.catAttrId] = true && item.push(next))\n        return item\n      }, [])\n      console.log(newData)\n      this.$emit('classData', newData)\n    }\n  },\n  props: {\n    classAttrVal: {\n      type: Array,\n      default: []\n    },\n    classAttrInfoData: {\n      type: Array,\n      default: []\n    },\n    classCatId: {\n      type: String,\n      default: ''\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    classAttrVal: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          this.componentData = []\n          val.forEach(item => {\n            if (item.inputType === 'INPUT') {\n              this.componentData.push({\n                name: item.name,\n                id: item.id,\n                required: item.required,\n                attrType: item.attrType,\n                valType: item.valType,\n                component: 'inputComponent'\n              })\n            }\n            if (item.inputType === 'RADIO' || item.inputType === 'CHECKBOX') {\n              this.componentData.push({\n                name: item.name,\n                id: item.id,\n                required: item.required,\n                attrType: item.attrType,\n                options: item.optionList,\n                component: 'selectComponent'\n              })\n            }\n          })\n          console.log(this.componentData)\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    classAttrInfoData: {\n      handler(val) {\n        if (val.length) {\n          getClassAttr(this.classCatId).then(res => {\n            if (res.data.code === 0) {\n              this.componentData = []\n              res.data.data.forEach((item, index) => {\n                const newData = val.filter((cItem, index) => {\n                  return item.id === cItem.catAttrId\n                })\n                if (item.inputType === 'INPUT') {\n                  this.componentData[index] = {\n                    name: item.name,\n                    id: item.id,\n                    required: item.required,\n                    attrType: item.attrType,\n                    valType: item.valType,\n                    component: 'inputComponent',\n                    val: newData[0].val,\n                    catAttrId: newData[0].catAttrId\n                  }\n                }\n                if (\n                  item.inputType === 'RADIO' ||\n                  item.inputType === 'CHECKBOX'\n                ) {\n                  this.componentData[index] = {\n                    name: item.name,\n                    id: item.id,\n                    required: item.required,\n                    attrType: item.attrType,\n                    options: item.optionList,\n                    component: 'selectComponent',\n                    val: newData[0].val,\n                    catAttrId: newData[0].catAttrId\n                  }\n                }\n              })\n              this.$emit('classData', this.componentData)\n            }\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  components: {\n    SelectComponent,\n    InputComponent\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n</style>\n"]}]}