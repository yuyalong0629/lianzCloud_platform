{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/components/layouts/SiderMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/components/layouts/SiderMenu.vue","mtime":1557902339768},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n * recommend SubMenu.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu.vue\n * SubMenu1.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu1.vue\n * */\nimport SubMenu from './SubMenu'\nimport { check } from '../utils/auth'\nexport default {\n  props: {\n    theme: {\n      type: String,\n      default: 'dark'\n    }\n  },\n  components: {\n    'sub-menu': SubMenu\n  },\n  watch: {\n    '$route.path': function(val) {\n      this.selectedKeys = this.selectedKeysMap[val]\n      this.openKeys = this.collapsed ? [] : this.openKeysMap[val]\n    }\n  },\n  data() {\n    this.selectedKeysMap = {}\n    this.openKeysMap = {}\n    const menuData = this.getMenuData(this.$router.options.routes)\n    return {\n      collapsed: false,\n      menuData,\n      selectedKeys: this.selectedKeysMap[this.$route.path],\n      openKeys: this.collapsed ? [] : this.openKeysMap[this.$route.path]\n    }\n  },\n  methods: {\n    toggleCollapsed() {\n      this.collapsed = !this.collapsed\n    },\n    getMenuData(routes = [], parentKeys = [], selectedKey) {\n      const menuData = []\n      for (let item of routes) {\n        if (item.meta && item.meta.authority && !check(item.meta.authority)) {\n          continue\n        }\n        if (item.name && !item.hideInMenu) {\n          this.openKeysMap[item.path] = parentKeys\n          this.selectedKeysMap[item.path] = [selectedKey || item.path]\n          const newItem = { ...item }\n          delete newItem.children\n          if (item.children && !item.hideChildrenInMenu) {\n            newItem.children = this.getMenuData(item.children, [\n              ...parentKeys,\n              item.path\n            ])\n          } else {\n            this.getMenuData(\n              item.children,\n              selectedKey ? parentKeys : [...parentKeys, item.path],\n              selectedKey || item.path\n            )\n          }\n          menuData.push(newItem)\n        } else if (\n          !item.hideInMenu &&\n          !item.hideChildrenInMenu &&\n          item.children\n        ) {\n          menuData.push(\n            ...this.getMenuData(item.children, [...parentKeys, item.path])\n          )\n        }\n      }\n      return menuData\n    }\n  }\n}\n",{"version":3,"sources":["SiderMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SiderMenu.vue","sourceRoot":"src/components/layouts","sourcesContent":["<template>\n  <div style=\"width: 256px\">\n    <a-menu :selectedKeys=\"selectedKeys\" :openKeys.sync=\"openKeys\" mode=\"inline\" :theme=\"theme\">\n      <template v-for=\"item in menuData\">\n        <a-menu-item\n          v-if=\"!item.children\"\n          :key=\"item.path\"\n          @click=\"() => $router.push({ path: item.path, query: $route.query })\"\n        >\n          <a-icon v-if=\"item.meta.icon\" :type=\"item.meta.icon\"/>\n          <span>{{ item.meta.title }}</span>\n        </a-menu-item>\n        <sub-menu v-else :menu-info=\"item\" :key=\"item.path\"/>\n      </template>\n    </a-menu>\n  </div>\n</template>\n\n<script>\n/*\n * recommend SubMenu.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu.vue\n * SubMenu1.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu1.vue\n * */\nimport SubMenu from './SubMenu'\nimport { check } from '../utils/auth'\nexport default {\n  props: {\n    theme: {\n      type: String,\n      default: 'dark'\n    }\n  },\n  components: {\n    'sub-menu': SubMenu\n  },\n  watch: {\n    '$route.path': function(val) {\n      this.selectedKeys = this.selectedKeysMap[val]\n      this.openKeys = this.collapsed ? [] : this.openKeysMap[val]\n    }\n  },\n  data() {\n    this.selectedKeysMap = {}\n    this.openKeysMap = {}\n    const menuData = this.getMenuData(this.$router.options.routes)\n    return {\n      collapsed: false,\n      menuData,\n      selectedKeys: this.selectedKeysMap[this.$route.path],\n      openKeys: this.collapsed ? [] : this.openKeysMap[this.$route.path]\n    }\n  },\n  methods: {\n    toggleCollapsed() {\n      this.collapsed = !this.collapsed\n    },\n    getMenuData(routes = [], parentKeys = [], selectedKey) {\n      const menuData = []\n      for (let item of routes) {\n        if (item.meta && item.meta.authority && !check(item.meta.authority)) {\n          continue\n        }\n        if (item.name && !item.hideInMenu) {\n          this.openKeysMap[item.path] = parentKeys\n          this.selectedKeysMap[item.path] = [selectedKey || item.path]\n          const newItem = { ...item }\n          delete newItem.children\n          if (item.children && !item.hideChildrenInMenu) {\n            newItem.children = this.getMenuData(item.children, [\n              ...parentKeys,\n              item.path\n            ])\n          } else {\n            this.getMenuData(\n              item.children,\n              selectedKey ? parentKeys : [...parentKeys, item.path],\n              selectedKey || item.path\n            )\n          }\n          menuData.push(newItem)\n        } else if (\n          !item.hideInMenu &&\n          !item.hideChildrenInMenu &&\n          item.children\n        ) {\n          menuData.push(\n            ...this.getMenuData(item.children, [...parentKeys, item.path])\n          )\n        }\n      }\n      return menuData\n    }\n  }\n}\n</script>\n"]}]}