{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/babel-loader/lib/index.js!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/cust/child_info/AddressForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/src/views/cust/child_info/AddressForm.vue","mtime":1561636428656},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-project/platform/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { columnAddress } from '../basic_lib/column';\nimport { areas } from 'utils/area.js';\nimport { findParentId } from '@/assets/utils/utils.js';\nexport default {\n  name: 'AddressForm',\n  data: function data() {\n    return {\n      data: [],\n      columnAddress: columnAddress,\n      count: 0,\n      cacheData: [],\n      options: areas,\n      addressId: [],\n      // 暂存\n      staging: []\n    };\n  },\n  props: {\n    addressInfo: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    handleChangeArea: function handleChangeArea(value, selectedOptions, record, column) {\n      var newData = _toConsumableArray(this.data);\n\n      var addressName = selectedOptions.map(function (item) {\n        return item.name;\n      });\n      var target = newData.filter(function (item) {\n        return record.key === item.key;\n      })[0];\n\n      if (target) {\n        target[column] = addressName;\n        this.data = newData;\n        this.staging[record.key] = selectedOptions.map(function (item) {\n          return item.id;\n        });\n      }\n    },\n    handleChangeSwitch: function handleChangeSwitch(value, record, column) {\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.map(function (item) {\n        return _objectSpread({}, item, {\n          defaultGoodsAddr: item.key === record.key ? value : false\n        });\n      });\n      this.data = _toConsumableArray(target); // console.log(this.data)\n    },\n    handleChange: function handleChange(value, key, column) {\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.filter(function (item) {\n        return key === item.key;\n      })[0];\n\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      }\n    },\n    handleAdd: function handleAdd() {\n      var count = this.count,\n          data = this.data;\n      this.staging[count] = [];\n      var newData = {\n        key: count,\n        receiver: '',\n        phone: '',\n        address: [],\n        detailAddr: '',\n        deleted: false,\n        defaultGoodsAddr: false,\n        postCode: '',\n        editable: true\n      };\n      this.data = [].concat(_toConsumableArray(data), [newData]);\n      this.count = count + 1; // 保存初始化Obj\n\n      this.cacheData = this.data.map(function (item) {\n        return _objectSpread({}, item);\n      });\n      console.log(this.data);\n    },\n    onDelete: function onDelete(key) {\n      var _this = this;\n\n      var newData = _toConsumableArray(this.data);\n\n      this.data = newData.filter(function (item) {\n        return item.key !== key;\n      });\n      var customerAddrList = [];\n      this.data.slice(0).forEach(function (item, index) {\n        customerAddrList[index] = _objectSpread({}, item, {\n          province: _this.staging[index][0],\n          city: _this.staging[index][1],\n          area: _this.staging[index][2]\n        });\n      });\n      console.log(customerAddrList);\n      this.$emit('custAddrList', customerAddrList);\n    },\n    edit: function edit(key) {\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.filter(function (item) {\n        return key === item.key;\n      })[0];\n\n      if (target) {\n        target.editable = true;\n        this.addressId = this.staging[key];\n        this.data = newData;\n        console.log(this.data);\n      }\n    },\n    save: function save(key) {\n      var _this2 = this;\n\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.filter(function (item) {\n        return key === item.key;\n      })[0]; // if (target && target.address.length && target.receiver && target.phone) {\n\n      if (target) {\n        target.editable = false;\n        this.data = newData;\n        this.cacheData = newData.map(function (item) {\n          return _objectSpread({}, item);\n        });\n        console.log(this.data); // 阻止引用类型指向同一个堆内存\n\n        var customerAddrList = [];\n        this.data.concat([]).forEach(function (item, index) {\n          if (item.address.length) {\n            customerAddrList[index] = _objectSpread({}, item, {\n              province: _this2.staging[index][0],\n              city: _this2.staging[index][1],\n              area: _this2.staging[index][2]\n            });\n          }\n        });\n        console.log(customerAddrList);\n        this.$emit('custAddrList', customerAddrList);\n      } else {\n        this.$message.error('请先完善信息');\n      }\n    },\n    cancel: function cancel(key) {\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.filter(function (item) {\n        return key === item.key;\n      })[0];\n\n      if (target && target.address.length && target.receiver && target.phone) {\n        _Object$assign(target, this.cacheData.filter(function (item) {\n          return key === item.key;\n        })[0]);\n\n        target.editable = false;\n        this.data = newData;\n      } else {\n        this.data = newData.filter(function (item) {\n          return item.key !== key;\n        });\n      }\n    }\n  },\n  watch: {\n    addressInfo: {\n      handler: function handler(val) {\n        var _this3 = this;\n\n        if (val.length) {\n          console.log(val);\n          val.forEach(function (item, index) {\n            _this3.staging[index] = findParentId(item.area, _this3.options, 'id') || [];\n            _this3.data[index] = {\n              key: index,\n              receiver: item.receiver || '无',\n              phone: item.phone || '无',\n              address: item.area ? _toConsumableArray(findParentId(item.area, _this3.options, 'name')) : [],\n              detailAddr: item.detailAddr || '无',\n              defaultGoodsAddr: item.defaultGoodsAddr,\n              postCode: item.postCode || '无',\n              id: item.id,\n              custId: item.custId,\n              deleted: false,\n              editable: false\n            };\n            _this3.count = index + 1;\n          }); // console.log(this.data)\n          // 保存初始化Obj\n\n          this.cacheData = this.data.map(function (item) {\n            return _objectSpread({}, item);\n          }); // 阻止引用类型指向同一个堆内存\n\n          var customerAddrList = [];\n          this.data.concat([]).forEach(function (item, index) {\n            if (item.address.length) {\n              customerAddrList[index] = _objectSpread({}, item);\n            }\n          }); // console.log(customerAddrList)\n\n          this.$emit('custAddrList', customerAddrList);\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    getAddress: function getAddress() {\n      return findParentId(this.custFormInfo.custArea, this.options, 'name');\n    }\n  }\n};",{"version":3,"sources":["AddressForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"address-form\">\n    <a-table :columns=\"columnAddress\" :dataSource=\"data\" :pagination=\"false\" :scroll=\"{ x: 1240 }\">\n      <template\n        v-for=\"col in ['receiver', 'phone', 'address', 'detailAddr', 'defaultGoodsAddr', 'postCode']\"\n        :slot=\"col\"\n        slot-scope=\"text, record, index\"\n      >\n        <div :key=\"col\">\n          <a-input\n            v-if=\"record.editable && col !== 'address' && col !== 'defaultGoodsAddr'\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <a-cascader\n            v-if=\"record.editable && col === 'address'\"\n            :defaultValue=\"addressId\"\n            placeholder=\"请选择地址\"\n            @change=\"(value, selectedOptions) => handleChangeArea(value, selectedOptions, record, col)\"\n            style=\"width: 200px;\"\n            :fieldNames=\"{ label: 'name', value: 'id', children: 'childrens' }\"\n            :options=\"options\"\n          ></a-cascader>\n          <a-switch\n            v-if=\"record.editable && col === 'defaultGoodsAddr'\"\n            checkedChildren=\"是\"\n            unCheckedChildren=\"否\"\n            :checked=\"record.defaultGoodsAddr\"\n            @change=\"(value) => handleChangeSwitch(value, record, col)\"\n          />\n          <template>\n            <span\n              v-if=\"!record.editable && col !== 'address' && col !== 'defaultGoodsAddr'\"\n            >{{ text }}</span>\n            <span v-if=\"!record.editable && col === 'address'\">{{ text }}</span>\n            <span\n              v-if=\"!record.editable && col === 'defaultGoodsAddr'\"\n            >{{ text === true ? '是' : '否' }}</span>\n          </template>\n        </div>\n      </template>\n      <template slot=\"operation\" slot-scope=\"text, record, index\">\n        <div class=\"editable-row-operations\">\n          <span v-if=\"record.editable\">\n            <a @click=\"() => save(record.key)\">保存</a>\n            <a @click=\"() => cancel(record.key)\">取消</a>\n          </span>\n          <span v-else>\n            <a @click=\"() => edit(record.key)\">编辑</a>\n            <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => onDelete(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </div>\n      </template>\n    </a-table>\n    <a-button\n      style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\"\n      type=\"dashed\"\n      icon=\"plus\"\n      @click.stop=\"handleAdd\"\n    >添加联系人</a-button>\n  </div>\n</template>\n<script>\nimport { columnAddress } from '../basic_lib/column'\nimport { areas } from 'utils/area.js'\nimport { findParentId } from '@/assets/utils/utils.js'\n\nexport default {\n  name: 'AddressForm',\n  data() {\n    return {\n      data: [],\n      columnAddress,\n      count: 0,\n      cacheData: [],\n      options: areas,\n      addressId: [],\n      // 暂存\n      staging: []\n    }\n  },\n  props: {\n    addressInfo: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    handleChangeArea(value, selectedOptions, record, column) {\n      const newData = [...this.data]\n      const addressName = selectedOptions.map(item => item.name)\n      const target = newData.filter(item => record.key === item.key)[0]\n      if (target) {\n        target[column] = addressName\n        this.data = newData\n        this.staging[record.key] = selectedOptions.map(item => item.id)\n      }\n    },\n    handleChangeSwitch(value, record, column) {\n      const newData = [...this.data]\n      const target = newData.map(item => {\n        return {\n          ...item,\n          defaultGoodsAddr: item.key === record.key ? value : false\n        }\n      })\n      this.data = [...target]\n      // console.log(this.data)\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n    handleAdd() {\n      const { count, data } = this\n      this.staging[count] = []\n      const newData = {\n        key: count,\n        receiver: '',\n        phone: '',\n        address: [],\n        detailAddr: '',\n        deleted: false,\n        defaultGoodsAddr: false,\n        postCode: '',\n        editable: true\n      }\n      this.data = [...data, newData]\n      this.count = count + 1\n      // 保存初始化Obj\n      this.cacheData = this.data.map(item => ({ ...item }))\n      console.log(this.data)\n    },\n    onDelete(key) {\n      const newData = [...this.data]\n      this.data = newData.filter(item => item.key !== key)\n      const customerAddrList = []\n      this.data.slice(0).forEach((item, index) => {\n        customerAddrList[index] = {\n          ...item,\n          province: this.staging[index][0],\n          city: this.staging[index][1],\n          area: this.staging[index][2]\n        }\n      })\n      console.log(customerAddrList)\n      this.$emit('custAddrList', customerAddrList)\n    },\n    edit(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.addressId = this.staging[key]\n        this.data = newData\n        console.log(this.data)\n      }\n    },\n    save(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      // if (target && target.address.length && target.receiver && target.phone) {\n      if (target) {\n        target.editable = false\n        this.data = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n        console.log(this.data)\n        // 阻止引用类型指向同一个堆内存\n        const customerAddrList = []\n        this.data.concat([]).forEach((item, index) => {\n          if (item.address.length) {\n            customerAddrList[index] = {\n              ...item,\n              province: this.staging[index][0],\n              city: this.staging[index][1],\n              area: this.staging[index][2]\n            }\n          }\n        })\n        console.log(customerAddrList)\n        this.$emit('custAddrList', customerAddrList)\n      } else {\n        this.$message.error('请先完善信息')\n      }\n    },\n    cancel(key) {\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target && target.address.length && target.receiver && target.phone) {\n        Object.assign(\n          target,\n          this.cacheData.filter(item => key === item.key)[0]\n        )\n        target.editable = false\n        this.data = newData\n      } else {\n        this.data = newData.filter(item => item.key !== key)\n      }\n    }\n  },\n  watch: {\n    addressInfo: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          val.forEach((item, index) => {\n            this.staging[index] =\n              findParentId(item.area, this.options, 'id') || []\n            this.data[index] = {\n              key: index,\n              receiver: item.receiver || '无',\n              phone: item.phone || '无',\n              address: item.area\n                ? [...findParentId(item.area, this.options, 'name')]\n                : [],\n              detailAddr: item.detailAddr || '无',\n              defaultGoodsAddr: item.defaultGoodsAddr,\n              postCode: item.postCode || '无',\n              id: item.id,\n              custId: item.custId,\n              deleted: false,\n              editable: false\n            }\n            this.count = index + 1\n          })\n          // console.log(this.data)\n          // 保存初始化Obj\n          this.cacheData = this.data.map(item => ({ ...item }))\n          // 阻止引用类型指向同一个堆内存\n          const customerAddrList = []\n          this.data.concat([]).forEach((item, index) => {\n            if (item.address.length) {\n              customerAddrList[index] = {\n                ...item\n              }\n            }\n          })\n          // console.log(customerAddrList)\n          this.$emit('custAddrList', customerAddrList)\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    getAddress() {\n      return findParentId(this.custFormInfo.custArea, this.options, 'name')\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.editable-row-operations a {\n  margin-right: 8px;\n}\n</style>\n"],"sourceRoot":"src/views/cust/child_info"}]}