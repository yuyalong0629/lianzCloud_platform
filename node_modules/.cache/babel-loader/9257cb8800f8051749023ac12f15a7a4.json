{"remainingRequest":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/babel-loader/lib/index.js!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/SpriceInfoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/src/views/product/pdm/goods/child_info/tab_goodsInfo/SpriceInfoForm.vue","mtime":1562741125221},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/yuyalong/myProjects/lianzhiyun/projects/web-projects/platform/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { setTimeout, clearTimeout } from 'timers';\nimport Bus from '@/Bus.js';\nexport default {\n  name: 'SpriceInfo',\n  data: function data() {\n    return {\n      timer: null,\n      columns: [],\n      dataSource: [],\n      dataObj: {},\n      spriceData: [],\n      basicSprice: undefined,\n      bomButton: false\n    };\n  },\n  props: {\n    crafts: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    materialsGroup: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    spriceInfoBasic: {\n      type: String,\n      default: '',\n      required: false\n    },\n    spriceInfoData: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    Bus.$on('bomSub', function (val) {\n      _this.bomButton = val;\n      console.log(_this.bomButton);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    Bus.$off('bomSub');\n    clearTimeout(this.timer);\n  },\n  methods: {\n    handleChangeInput: function handleChangeInput(value, key, column) {\n      var reg = /^[0-9]*$/;\n\n      if (reg.test(value)) {\n        var newData = _toConsumableArray(this.dataSource);\n\n        var target = newData.filter(function (item) {\n          return key === item.key;\n        })[0];\n\n        if (target) {\n          target[column] = value;\n          this.dataSource = _toConsumableArray(newData);\n          this.setSpriceData(); // console.log(this.spriceData)\n\n          this.$emit('spriceData', this.spriceData);\n        }\n      } else {\n        this.$message.error('请输入数字');\n      }\n    },\n    handleChangeBasic: function handleChangeBasic(value) {\n      // console.log(value)\n      var reg = /^[0-9]*$/;\n\n      if (reg.test(value)) {\n        this.basicSprice = value;\n        this.$emit('basicSprice', this.basicSprice);\n      } else {\n        this.$message.error('请输入数字');\n      }\n    },\n    // 工艺Tab\n    craft: function () {\n      var _craft = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(val) {\n        var _this2 = this;\n\n        var newColumns;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataSource = [];\n                newColumns = _toConsumableArray(this.columns);\n                val.forEach(function (item, index) {\n                  newColumns.forEach(function (cItem, cIndex) {\n                    if (cIndex === 0) {\n                      _this2.dataObj['craft'] = item.inputVal;\n                    } else {\n                      _this2.dataObj[cItem.dataIndex] = '0';\n                    }\n                  });\n                  _this2.dataSource[index] = _objectSpread({\n                    key: item.key\n                  }, _this2.dataObj);\n                });\n                this.columns = _toConsumableArray(newColumns); // console.log(this.columns)\n                // console.log(this.dataSource)\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function craft(_x) {\n        return _craft.apply(this, arguments);\n      }\n\n      return craft;\n    }(),\n    // Bom Tab\n    bomColumn: function () {\n      var _bomColumn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(val) {\n        var newDataSource, firstColumns, otherColumns;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newDataSource = _toConsumableArray(this.dataSource); // console.log(this.dataSource)\n\n                firstColumns = [{\n                  title: '',\n                  dataIndex: 'craft'\n                }];\n                otherColumns = val.map(function (item, index) {\n                  return {\n                    title: item.inputVal,\n                    dataIndex: \"plan\".concat(item.key),\n                    id: item.key,\n                    scopedSlots: {\n                      customRender: \"plan\".concat(item.key)\n                    }\n                  };\n                });\n                this.columns = [].concat(firstColumns, _toConsumableArray(otherColumns));\n                this.dataSource = _toConsumableArray(newDataSource); // console.log(this.columns)\n                // console.log(this.dataSource)\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function bomColumn(_x2) {\n        return _bomColumn.apply(this, arguments);\n      }\n\n      return bomColumn;\n    }(),\n    // TabInfo\n    setSpriceData: function () {\n      var _setSpriceData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this3 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.spriceData = [];\n                this.dataSource.forEach(function (item) {\n                  _this3.columns.slice(1, _this3.columns.length).forEach(function (cItem) {\n                    _this3.spriceData.push({\n                      craftIndex: item.key,\n                      bomIndex: cItem.id,\n                      price: item[\"plan\".concat(cItem.id)]\n                    });\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setSpriceData() {\n        return _setSpriceData.apply(this, arguments);\n      }\n\n      return setSpriceData;\n    }()\n  },\n  watch: {\n    crafts: {\n      handler: function handler(val) {\n        var _this4 = this;\n\n        console.log(val);\n        this.craftDataSource = val;\n        this.craft(this.craftDataSource).then(function () {\n          _this4.setSpriceData().then(function () {\n            _this4.$emit('spriceData', _this4.spriceData);\n          });\n        });\n      },\n      deep: true,\n      immediate: true\n    },\n    materialsGroup: {\n      handler: function handler(val) {\n        var _this5 = this;\n\n        // console.log(val)\n        this.bomColumn(val).then(function () {\n          _this5.craft(_this5.craftDataSource);\n\n          _this5.setSpriceData().then(function () {\n            _this5.$emit('spriceData', _this5.spriceData);\n          });\n        });\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoData: {\n      handler: function handler(val) {\n        var _this6 = this;\n\n        if (val.length) {\n          console.log(val);\n          setTimeout(function () {\n            var newData = _toConsumableArray(_this6.dataSource);\n\n            console.log(newData);\n            val.forEach(function (item, index) {\n              var target = newData.filter(function (cItem) {\n                return item.craftIndex === cItem.key;\n              })[0];\n              target[\"plan\".concat(item.bomIndex)] = item.price + '';\n              _this6.dataSource = _toConsumableArray(newData);\n            });\n            console.log(val.map(function (item) {\n              return {\n                craftIndex: item.craftIndex,\n                bomIndex: item.bomIndex,\n                price: item.price\n              };\n            }));\n\n            _this6.$emit('spriceData', val.map(function (item) {\n              return {\n                craftIndex: item.craftIndex,\n                bomIndex: item.bomIndex,\n                price: item.price\n              };\n            }));\n          }, 1500);\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoBasic: {\n      handler: function handler(val) {\n        this.basicSprice = val;\n        this.$emit('basicSprice', this.basicSprice);\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};",{"version":3,"sources":["SpriceInfoForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"sprice-info\">\n    <a-row :gutter=\"24\">\n      <a-col :span=\"18\">\n        <a-table bordered :dataSource=\"dataSource\" :columns=\"columns\" :pagination=\"false\">\n          <template v-for=\"(value, col) in dataObj\" :slot=\"col\" slot-scope=\"text, record, index\">\n            <div :key=\"col\">\n              <a-input\n                style=\"margin: -5px 5px; width: 80%;\"\n                :disabled=\"(childDisabled === false && bomButton === false) ? true : false\"\n                :value=\"text\"\n                placeholder=\"请输入价格\"\n                @change=\"e => handleChangeInput(e.target.value, record.key, col)\"\n              />\n            </div>\n          </template>\n        </a-table>\n      </a-col>\n      <a-col :span=\"6\">\n        <a-form-item label=\"基础报价\">\n          <a-input\n            :value=\"basicSprice\"\n            :disabled=\"(childDisabled === false && bomButton === false) ? true : false\"\n            @change=\"e => handleChangeBasic(e.target.value)\"\n            placeholder=\"基础报价\"\n          />\n        </a-form-item>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n<script>\nimport { setTimeout, clearTimeout } from 'timers'\nimport Bus from '@/Bus.js'\n\nexport default {\n  name: 'SpriceInfo',\n  data() {\n    return {\n      timer: null,\n      columns: [],\n      dataSource: [],\n      dataObj: {},\n      spriceData: [],\n      basicSprice: undefined,\n      bomButton: false\n    }\n  },\n  props: {\n    crafts: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    materialsGroup: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    spriceInfoBasic: {\n      type: String,\n      default: '',\n      required: false\n    },\n    spriceInfoData: {\n      type: Array,\n      default: [],\n      required: false\n    },\n    childDisabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  mounted() {\n    Bus.$on('bomSub', val => {\n      this.bomButton = val\n      console.log(this.bomButton)\n    })\n  },\n  beforeDestroy() {\n    Bus.$off('bomSub')\n    clearTimeout(this.timer)\n  },\n  methods: {\n    handleChangeInput(value, key, column) {\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        const newData = [...this.dataSource]\n        const target = newData.filter(item => key === item.key)[0]\n        if (target) {\n          target[column] = value\n          this.dataSource = [...newData]\n          this.setSpriceData()\n          // console.log(this.spriceData)\n          this.$emit('spriceData', this.spriceData)\n        }\n      } else {\n        this.$message.error('请输入数字')\n      }\n    },\n    handleChangeBasic(value) {\n      // console.log(value)\n      const reg = /^[0-9]*$/\n      if (reg.test(value)) {\n        this.basicSprice = value\n        this.$emit('basicSprice', this.basicSprice)\n      } else {\n        this.$message.error('请输入数字')\n      }\n    },\n    // 工艺Tab\n    async craft(val) {\n      this.dataSource = []\n      const newColumns = [...this.columns]\n      val.forEach((item, index) => {\n        newColumns.forEach((cItem, cIndex) => {\n          if (cIndex === 0) {\n            this.dataObj['craft'] = item.inputVal\n          } else {\n            this.dataObj[cItem.dataIndex] = '0'\n          }\n        })\n        this.dataSource[index] = {\n          key: item.key,\n          ...this.dataObj\n        }\n      })\n      this.columns = [...newColumns]\n      // console.log(this.columns)\n      // console.log(this.dataSource)\n    },\n    // Bom Tab\n    async bomColumn(val) {\n      const newDataSource = [...this.dataSource]\n      // console.log(this.dataSource)\n      const firstColumns = [\n        {\n          title: '',\n          dataIndex: 'craft'\n        }\n      ]\n      const otherColumns = val.map((item, index) => {\n        return {\n          title: item.inputVal,\n          dataIndex: `plan${item.key}`,\n          id: item.key,\n          scopedSlots: { customRender: `plan${item.key}` }\n        }\n      })\n      this.columns = [...firstColumns, ...otherColumns]\n      this.dataSource = [...newDataSource]\n      // console.log(this.columns)\n      // console.log(this.dataSource)\n    },\n    // TabInfo\n    async setSpriceData() {\n      this.spriceData = []\n      this.dataSource.forEach(item => {\n        this.columns.slice(1, this.columns.length).forEach(cItem => {\n          this.spriceData.push({\n            craftIndex: item.key,\n            bomIndex: cItem.id,\n            price: item[`plan${cItem.id}`]\n          })\n        })\n      })\n    }\n  },\n  watch: {\n    crafts: {\n      handler(val) {\n        console.log(val)\n        this.craftDataSource = val\n        this.craft(this.craftDataSource).then(() => {\n          this.setSpriceData().then(() => {\n            this.$emit('spriceData', this.spriceData)\n          })\n        })\n      },\n      deep: true,\n      immediate: true\n    },\n    materialsGroup: {\n      handler(val) {\n        // console.log(val)\n        this.bomColumn(val).then(() => {\n          this.craft(this.craftDataSource)\n          this.setSpriceData().then(() => {\n            this.$emit('spriceData', this.spriceData)\n          })\n        })\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoData: {\n      handler(val) {\n        if (val.length) {\n          console.log(val)\n          setTimeout(() => {\n            const newData = [...this.dataSource]\n            console.log(newData)\n            val.forEach((item, index) => {\n              const target = newData.filter(\n                cItem => item.craftIndex === cItem.key\n              )[0]\n              target[`plan${item.bomIndex}`] = item.price + ''\n              this.dataSource = [...newData]\n            })\n            console.log(\n              val.map(item => {\n                return {\n                  craftIndex: item.craftIndex,\n                  bomIndex: item.bomIndex,\n                  price: item.price\n                }\n              })\n            )\n            this.$emit(\n              'spriceData',\n              val.map(item => {\n                return {\n                  craftIndex: item.craftIndex,\n                  bomIndex: item.bomIndex,\n                  price: item.price\n                }\n              })\n            )\n          }, 1500)\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    spriceInfoBasic: {\n      handler(val) {\n        this.basicSprice = val\n        this.$emit('basicSprice', this.basicSprice)\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n.sprice-info {\n  margin-bottom: 30px;\n}\n</style>\n"],"sourceRoot":"src/views/product/pdm/goods/child_info/tab_goodsInfo"}]}